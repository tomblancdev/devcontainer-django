version: "latest"

services:
  untitled: # ! ðŸ‘ˆ name of the service
    build: . # path to the Dockerfile
    container_name: untitled-dev # ! ðŸ‘ˆ name of the container
    restart: always # restart the container if it stops
    volumes: # mount the current directory to the container
      - ..:/workspace:cached # mount the current directory as workspace to the container
    environment: # set environment variables
      POETRY_VIRTUALENVS_IN_PROJECT: True
      ENVIRONMENT: "development"
      # ___ Base settings ___
      DEBUG: True
      DJANGO_SETTINGS_MODULE: settings
      # SECRET_KEY: ""
      # ___ Admin ___
      DJANGO_SUPERUSER_USERNAME: admin
      DJANGO_SUPERUSER_PASSWORD: password
      DJANGO_SUPERUSER_EMAIL: admin@example.com
      DJANGO_SUPERUSER_FIRST_NAME: Admin
      DJANGO_SUPERUSER_LAST_NAME: ADMIN
      # ___ Email ___
      # EMAIL_HOST: smtp.example.com
      # EMAIL_PORT: 587
      # EMAIL_HOST_USER: ""
      # EMAIL_HOST_PASSWORD: ""
      # EMAIL_USE_TLS: True
      # EMAIL_USE_SSL: False
      # EMAIL_TIMEOUT: 60
      # EMAIL_SSL_KEYFILE: None
      # EMAIL_SSL_CERTFILE: None
      # ___ Database ___
      # DB_ENGINE: django.db.backends.postgresql
      # DB_NAME: postgres
      # DB_USER: postgres
      # DB_PASSWORD: postgres
      # DB_HOST: db
      # DB_PORT: 5432
      # ___ Static files ___
      STATIC_URL: /static/
      STATIC_ROOT: /staticfiles/
      # ___ Media files ___
      MEDIA_URL: /media/
      MEDIA_ROOT: /mediafiles/
      # ___ Globalization ___
      LANGUAGE_CODE: en-us
      TIME_ZONE: UTC

    ports: # expose ports
      - "8000:80" # expose port 80 of the container to port 8000 of the host machine

    command: /bin/sh -c "while sleep 1000; do :; done" # * keep the container running
